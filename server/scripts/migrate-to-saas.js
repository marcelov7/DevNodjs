const { createSaasSchema } = require('./create-saas-schema');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function question(query) {
    return new Promise(resolve => rl.question(query, resolve));
}

async function migrateToSaas() {
    console.log('üè¢ MIGRA√á√ÉO PARA SAAS - SISTEMA DE GEST√ÉO DE EQUIPAMENTOS');
    console.log('================================================================');
    console.log('');
    console.log('‚ö†Ô∏è  IMPORTANTE: Fa√ßa backup do banco de dados antes de continuar!');
    console.log('');
    console.log('Esta migra√ß√£o ir√°:');
    console.log('‚úÖ Criar tabela de organiza√ß√µes (empresas)');
    console.log('‚úÖ Adicionar tenant_id em todas as tabelas');
    console.log('‚úÖ Implementar isolamento completo de dados');
    console.log('‚úÖ Criar sistema de convites de usu√°rios');
    console.log('‚úÖ Implementar auditoria de a√ß√µes');
    console.log('‚úÖ Configurar planos e limites');
    console.log('');

    const continuar = await question('Deseja continuar com a migra√ß√£o? (sim/n√£o): ');
    
    if (continuar.toLowerCase() !== 'sim') {
        console.log('‚ùå Migra√ß√£o cancelada pelo usu√°rio');
        process.exit(0);
    }

    try {
        console.log('');
        console.log('üîÑ Iniciando migra√ß√£o...');
        
        await createSaasSchema();
        
        console.log('');
        console.log('üéâ MIGRA√á√ÉO CONCLU√çDA COM SUCESSO!');
        console.log('');
        console.log('üìã Pr√≥ximos passos:');
        console.log('1. ‚úÖ Estrutura SaaS implementada');
        console.log('2. ‚úÖ Organiza√ß√£o padr√£o criada (ID: 1)');
        console.log('3. ‚úÖ Todos os dados existentes preservados');
        console.log('4. ‚úÖ Sistema de multi-tenancy ativo');
        console.log('');
        console.log('üîß Para criar novas organiza√ß√µes:');
        console.log('   POST /api/organizacoes (apenas admin_master)');
        console.log('');
        console.log('üë• Para convidar usu√°rios:');
        console.log('   POST /api/organizacoes/invite-user');
        console.log('');
        console.log('üìä Para ver estat√≠sticas:');
        console.log('   GET /api/organizacoes/current');
        console.log('   GET /api/organizacoes/:id/stats');
        console.log('');
        console.log('üõ°Ô∏è Recursos de Seguran√ßa:');
        console.log('   ‚Ä¢ Isolamento completo por tenant');
        console.log('   ‚Ä¢ Auditoria de todas as a√ß√µes');
        console.log('   ‚Ä¢ Limites baseados em planos');
        console.log('   ‚Ä¢ Verifica√ß√£o de recursos habilitados');
        console.log('');
        console.log('üöÄ Sistema pronto para m√∫ltiplas organiza√ß√µes!');

    } catch (error) {
        console.error('‚ùå Erro na migra√ß√£o:', error.message);
        process.exit(1);
    } finally {
        rl.close();
    }
}

// Executar se chamado diretamente
if (require.main === module) {
    migrateToSaas();
}

module.exports = { migrateToSaas }; 